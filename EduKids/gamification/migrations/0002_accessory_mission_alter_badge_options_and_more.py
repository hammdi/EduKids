# Generated by Django 5.2.6 on 2025-10-24 16:38

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("gamification", "0001_initial"),
        ("students", "0002_alter_teacher_certification_level"),
    ]

    operations = [
        migrations.CreateModel(
            name="Accessory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "image",
                    models.ImageField(upload_to="accessories/", verbose_name="Image"),
                ),
                (
                    "accessory_type",
                    models.CharField(
                        choices=[
                            ("hat", "Chapeau"),
                            ("glasses", "Lunettes"),
                            ("outfit", "Tenue"),
                            ("background", "Fond"),
                            ("pet", "Animal de compagnie"),
                            ("other", "Autre"),
                        ],
                        default="other",
                        max_length=20,
                        verbose_name="Type d'accessoire",
                    ),
                ),
                (
                    "points_required",
                    models.IntegerField(default=50, verbose_name="Points requis"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Disponible"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Créé le"
                    ),
                ),
            ],
            options={
                "verbose_name": "Accessoire",
                "verbose_name_plural": "Accessoires",
                "ordering": ["accessory_type", "points_required"],
            },
        ),
        migrations.CreateModel(
            name="Mission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titre",
                    models.CharField(
                        max_length=200, verbose_name="Titre de la mission"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description détaillée")),
                (
                    "type_mission",
                    models.CharField(
                        choices=[
                            ("lecture", "Lecture"),
                            ("math", "Mathématiques"),
                            ("science", "Sciences"),
                            ("histoire", "Histoire"),
                            ("geographie", "Géographie"),
                            ("langue", "Langue"),
                            ("creativite", "Créativité"),
                            ("general", "Général"),
                        ],
                        default="general",
                        max_length=15,
                        verbose_name="Type de mission",
                    ),
                ),
                (
                    "objectif",
                    models.IntegerField(
                        default=1,
                        help_text="Nombre d'actions à accomplir pour terminer la mission",
                        verbose_name="Objectif (nombre de tâches)",
                    ),
                ),
                (
                    "points",
                    models.IntegerField(default=50, verbose_name="Points récompense"),
                ),
                (
                    "date_expiration",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'expiration"
                    ),
                ),
                ("actif", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
            ],
            options={
                "verbose_name": "Mission",
                "verbose_name_plural": "Missions",
                "ordering": ["type_mission", "-created_at"],
            },
        ),
        migrations.AlterModelOptions(
            name="badge",
            options={
                "ordering": ["nom"],
                "verbose_name": "Badge",
                "verbose_name_plural": "Badges",
            },
        ),
        migrations.RenameField(
            model_name="badge",
            old_name="name",
            new_name="nom",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="badge_type",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="criteria",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="image",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="is_secret",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="points_reward",
        ),
        migrations.RemoveField(
            model_name="badge",
            name="rarity",
        ),
        migrations.AddField(
            model_name="badge",
            name="condition",
            field=models.TextField(
                default="Condition à définir",
                help_text="Règle textuelle pour gagner le badge (ex: 'Terminer 3 missions de lecture')",
                verbose_name="Condition d'attribution",
            ),
        ),
        migrations.AddField(
            model_name="badge",
            name="points_bonus",
            field=models.IntegerField(default=10, verbose_name="Points bonus"),
        ),
        migrations.CreateModel(
            name="Avatar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/custom/",
                        verbose_name="Image d'avatar",
                    ),
                ),
                (
                    "level",
                    models.IntegerField(default=1, verbose_name="Niveau de l'élève"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Mis à jour le"
                    ),
                ),
                (
                    "accessories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="equipped_on",
                        to="gamification.accessory",
                        verbose_name="Accessoires équipés",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avatar",
                        to="students.student",
                        verbose_name="Élève",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avatar",
                "verbose_name_plural": "Avatars",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="UserAccessory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unlocked", "Débloqué"),
                            ("owned", "Possédé"),
                            ("equipped", "Équipé"),
                        ],
                        default="unlocked",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "date_obtained",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date d'obtention",
                    ),
                ),
                (
                    "accessory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_ownerships",
                        to="gamification.accessory",
                        verbose_name="Accessoire",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_accessories",
                        to="students.student",
                        verbose_name="Élève",
                    ),
                ),
            ],
            options={
                "verbose_name": "Accessoire utilisateur",
                "verbose_name_plural": "Accessoires utilisateurs",
                "ordering": ["-date_obtained"],
                "unique_together": {("student", "accessory")},
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_obtention",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'obtention"
                    ),
                ),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gagnes_par",
                        to="gamification.badge",
                        verbose_name="Badge",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to="students.student",
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Badge utilisateur",
                "verbose_name_plural": "Badges utilisateurs",
                "ordering": ["-date_obtention"],
                "unique_together": {("user", "badge")},
            },
        ),
        migrations.CreateModel(
            name="UserMission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "progression",
                    models.IntegerField(
                        default=0,
                        help_text="Nombre d'actions accomplies",
                        verbose_name="Progression actuelle",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[("en_cours", "En cours"), ("termine", "Terminé")],
                        default="en_cours",
                        max_length=15,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "date_attribuee",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date attribuée"
                    ),
                ),
                (
                    "date_terminee",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date terminée"
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="gamification.mission",
                        verbose_name="Mission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="missions",
                        to="students.student",
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mission utilisateur",
                "verbose_name_plural": "Missions utilisateurs",
                "ordering": ["-date_attribuee"],
                "unique_together": {("user", "mission")},
            },
        ),
        migrations.DeleteModel(
            name="StudentBadge",
        ),
    ]
