# Generated by Django 5.2.6 on 2025-10-13 09:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Non commencé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('abandoned', 'Abandonné')], default='not_started', max_length=15, verbose_name='Statut')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='Score (%)')),
                ('points_earned', models.IntegerField(default=0, verbose_name='Points gagnés')),
                ('time_taken', models.IntegerField(blank=True, null=True, verbose_name='Temps passé (secondes)')),
                ('attempts', models.IntegerField(default=1, verbose_name='Nombre de tentatives')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback automatique')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Commencé le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminé le')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='exercises.exercise', verbose_name='Exercice')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='students.student', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('exercise', 'Exercice recommandé'), ('topic', 'Thème à réviser'), ('learning_strategy', "Stratégie d'apprentissage"), ('general', 'Recommandation générale')], max_length=20, verbose_name='Type de recommandation')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('medium', 'Moyenne'), ('high', 'Haute'), ('urgent', 'Urgente')], default='medium', max_length=10, verbose_name='Priorité')),
                ('reason', models.TextField(help_text='Pourquoi cette recommandation', verbose_name='Raison')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Complétée')),
                ('is_dismissed', models.BooleanField(default=False, verbose_name='Ignorée')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créée le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Complétée le')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='exercises.exercise', verbose_name='Exercice suggéré')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='students.student', verbose_name='Élève')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='exercises.topic', verbose_name='Thème suggéré')),
            ],
            options={
                'verbose_name': 'Recommandation',
                'verbose_name_plural': 'Recommandations',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('student', 'Rapport individuel'), ('classroom', 'Rapport de classe'), ('subject', 'Rapport par matière'), ('period', 'Rapport périodique')], max_length=15, verbose_name='Type de rapport')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('period_start', models.DateField(verbose_name='Début de période')),
                ('period_end', models.DateField(verbose_name='Fin de période')),
                ('data', models.JSONField(default=dict, help_text='Statistiques, graphiques, etc.', verbose_name='Données du rapport')),
                ('summary', models.TextField(verbose_name='Résumé')),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/', verbose_name='Fichier PDF')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='students.classroom', verbose_name='Classe')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to='students.teacher', verbose_name='Généré par')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='students.student', verbose_name='Élève')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='exercises.subject', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Rapport',
                'verbose_name_plural': 'Rapports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(verbose_name="Réponse de l'élève")),
                ('selected_answers', models.JSONField(blank=True, default=list, help_text='IDs des réponses sélectionnées pour les QCM', verbose_name='Réponses sélectionnées')),
                ('is_correct', models.BooleanField(blank=True, null=True, verbose_name='Réponse correcte?')),
                ('points_earned', models.IntegerField(default=0, verbose_name='Points gagnés')),
                ('time_taken', models.IntegerField(blank=True, null=True, verbose_name='Temps passé (secondes)')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Répondu le')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='assessments.assessment', verbose_name='Évaluation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_responses', to='exercises.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': "Réponse d'élève",
                'verbose_name_plural': "Réponses d'élèves",
                'ordering': ['assessment', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.FloatField(default=0.0, verbose_name='Niveau de compétence (0-100)')),
                ('exercises_completed', models.IntegerField(default=0, verbose_name='Exercices terminés')),
                ('total_points', models.IntegerField(default=0, verbose_name='Points totaux')),
                ('average_score', models.FloatField(default=0.0, verbose_name='Score moyen (%)')),
                ('improvement_rate', models.FloatField(default=0.0, verbose_name="Taux d'amélioration (%)")),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Dernière activité')),
                ('strengths', models.JSONField(default=list, help_text='Liste des thèmes maîtrisés', verbose_name='Points forts')),
                ('weaknesses', models.JSONField(default=list, help_text='Liste des thèmes à travailler', verbose_name='Points à améliorer')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='students.student', verbose_name='Élève')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='exercises.subject', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Progrès',
                'verbose_name_plural': 'Progrès',
                'ordering': ['student', 'subject'],
                'unique_together': {('student', 'subject')},
            },
        ),
    ]
