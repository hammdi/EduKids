# Generated by Django 5.2.6 on 2025-10-25 11:12

from django.db import migrations


def create_story_writing_badges(apps, schema_editor):
    """Create badges for story writing feature"""
    Badge = apps.get_model('assessments', 'Badge')
    
    badges_data = [
        {
            'badge_type': 'enchanted_storybook',
            'name': 'Enchanted Storybook',
            'description': 'Awarded for writing your first creative story! Keep the magic flowing! ✨',
            'icon': '📖',
            'color': '#A78BFA',
            'requirement': {'type': 'story_writing', 'count': 1}
        },
        {
            'badge_type': 'adventure_scroll',
            'name': 'Adventure Scroll',
            'description': 'Your stories are full of adventure and excitement! Keep exploring! 🗺️',
            'icon': '📜',
            'color': '#FBBF24',
            'requirement': {'type': 'story_writing', 'creativity': 'high'}
        },
        {
            'badge_type': 'fantasy_narrator',
            'name': 'Fantasy Narrator',
            'description': 'You have a gift for storytelling! Your imagination knows no bounds! 🎭',
            'icon': '🎭',
            'color': '#EC4899',
            'requirement': {'type': 'story_writing', 'creativity': 'excellent'}
        },
        {
            'badge_type': 'imagination_explorer',
            'name': 'Imagination Explorer',
            'description': 'Your creativity shines bright! Keep writing amazing stories! 🌟',
            'icon': '🌟',
            'color': '#10B981',
            'requirement': {'type': 'story_writing', 'creativity': 'outstanding'}
        },
    ]
    
    for badge_data in badges_data:
        Badge.objects.get_or_create(
            badge_type=badge_data['badge_type'],
            defaults=badge_data
        )


def remove_story_writing_badges(apps, schema_editor):
    """Remove story writing badges if migration is reversed"""
    Badge = apps.get_model('assessments', 'Badge')
    badge_types = ['enchanted_storybook', 'adventure_scroll', 'fantasy_narrator', 'imagination_explorer']
    Badge.objects.filter(badge_type__in=badge_types).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('assessments', '0004_alter_badge_badge_type_storyassessment'),
    ]

    operations = [
        migrations.RunPython(create_story_writing_badges, remove_story_writing_badges),
    ]
